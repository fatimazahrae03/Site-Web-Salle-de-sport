{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL PRECISION\\\\Desktop\\\\projet\\\\sallesport\\\\src\\\\AddPrograms.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddPrograms() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const navigate = useNavigate();\n  async function addPrograms() {\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    if (file) {\n      formData.append(\"file\", file);\n    }\n    try {\n      let result = await fetch(\"http://localhost:8000/api/addprograms\", {\n        method: 'POST',\n        body: formData\n      });\n      if (result.ok) {\n        let response = await result.json();\n        console.log(\"Recette ajoutée:\", response);\n        navigate(\"/recettelist\");\n      } else {\n        let error = await result.json();\n        console.error(\"Erreur lors de l'ajout de la recette:\", error);\n      }\n    } catch (error) {\n      console.error(\"Erreur réseau:\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-6 offset-sm-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ajouter une Recette\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        className: \"form-control\",\n        placeholder: \"Nom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0]),\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addRecette,\n        className: \"btn btn-primary\",\n        children: \"Ajouter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(AddPrograms, \"Nw/cj6yKBYn5wvL2o/x3oQU0kbo=\", false, function () {\n  return [useNavigate];\n});\n_c = AddPrograms;\nexport default AddPrograms;\nvar _c;\n$RefreshReg$(_c, \"AddPrograms\");","map":{"version":3,"names":["React","useState","useNavigate","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","AddPrograms","_s","name","setName","file","setFile","navigate","addPrograms","formData","FormData","append","result","fetch","method","body","ok","response","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","value","onChange","e","target","placeholder","files","onClick","addRecette","_c","$RefreshReg$"],"sources":["C:/Users/DELL PRECISION/Desktop/projet/sallesport/src/AddPrograms.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Header from './Header';\r\n\r\nfunction AddPrograms() {\r\n    const [name, setName] = useState(\"\");\r\n    const [file, setFile] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    async function addPrograms() {\r\n        const formData = new FormData();\r\n        formData.append(\"name\", name);\r\n        if (file) {\r\n            formData.append(\"file\", file);\r\n        }\r\n\r\n        try {\r\n            let result = await fetch(\"http://localhost:8000/api/addprograms\", {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n\r\n            if (result.ok) {\r\n                let response = await result.json();\r\n                console.log(\"Recette ajoutée:\", response);\r\n                navigate(\"/recettelist\");\r\n            } else {\r\n                let error = await result.json();\r\n                console.error(\"Erreur lors de l'ajout de la recette:\", error);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Erreur réseau:\", error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"col-sm-6 offset-sm-3\">\r\n                <h1>Ajouter une Recette</h1>\r\n                <input\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Nom\"\r\n                />\r\n                <br />\r\n                <input\r\n                    type=\"file\"\r\n                    onChange={(e) => setFile(e.target.files[0])}\r\n                    className=\"form-control\"\r\n                />\r\n                <br />\r\n                <button onClick={addRecette} className=\"btn btn-primary\">Ajouter</button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddPrograms;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}